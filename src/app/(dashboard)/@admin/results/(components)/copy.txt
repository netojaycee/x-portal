"use client";

import React from "react";
import Image from "next/image";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import { Card, CardContent } from "@/components/ui/card";

// Mock hook - replace with actual RTK query
const useGetResultsQuery = (params: any) => {
  // Mock data structure
  const mockData = {
    student: {
      id: "1",
      name: "Adebayo Tolu",
      gender: "Male",
      age: 14,
      studentPhoto: "/student-photo.jpg", // Replace with actual photo path
      class: "Basic 4,Diamond",
      studentInClass: 43,
    },
    academic: {
      session: "2023/2024",
      term: "First Term",
      daysPresent: 43,
      daysAbsent: 0,
      obtainableScore: 430,
      obtainedScore: 300,
      grade: "B (Very Good)",
      highestAverage: 73.23,
      lowestAverage: 73.23,
      classAverage: 73.23,
      studentAverage: 73.23,
    },
    subjects: [
      {
        id: "1",
        name: "Agricultural Science",
        assessment: 5,
        classWork: 5,
        continuousAssessment: 7,
        total: 20,
        percentage: 98,
        grade: "A",
        comment: "Excellent",
      },
      {
        id: "2",
        name: "Mathematics",
        assessment: 4,
        classWork: 4,
        continuousAssessment: 6,
        total: 18,
        percentage: 90,
        grade: "A",
        comment: "Very Good",
      },
      {
        id: "3",
        name: "English Language",
        assessment: 4,
        classWork: 5,
        continuousAssessment: 6,
        total: 19,
        percentage: 95,
        grade: "A",
        comment: "Excellent",
      },
      {
        id: "4",
        name: "Basic Science",
        assessment: 3,
        classWork: 4,
        continuousAssessment: 5,
        total: 15,
        percentage: 75,
        grade: "B",
        comment: "Good",
      },
      {
        id: "5",
        name: "Social Studies",
        assessment: 5,
        classWork: 5,
        continuousAssessment: 7,
        total: 20,
        percentage: 98,
        grade: "A",
        comment: "Excellent",
      },
    ],
    behavioralAssessment: {
      punctuality: "Excellent",
      attentiveness: "Very Good",
      leadershipSkills: "Good",
      neatness: "Excellent",
    },
    gradeScale: [
      { grade: "F- Fail", range: "0.00-49.99" },
      { grade: "P- Pass", range: "50.00-59.99" },
      { grade: "G- Good", range: "60.00-74.99" },
      { grade: "B- Very Good", range: "75.00-84.99" },
      { grade: "A- Excellent", range: "85.00- 100.00" },
    ],
    comments: {
      principal: "",
      administrator: "",
    },
    nextTermBegins: "",
  };

  return {
    data: mockData,
    isLoading: false,
    error: null,
  };
};

interface ReportCardProps {
  studentId?: string;
  sessionId?: string;
  termId?: string;
  classId?: string;
  // School header props
  schoolName?: string;
  leftLogoSrc?: string;
  address?: string;
  email?: string;
  phone?: string;
  schoolNameColor?: string;
}

const ReportCard: React.FC<ReportCardProps> = ({
  studentId,
  sessionId,
  termId,
  classId,
  schoolName = "DEEPER LIFE HIGH SCHOOL",
  leftLogoSrc = "/school-logo.png",
  address = "KLM 10, Abeokuta-Ibadan Road, Odeda,Abeokuta, Ogun State",
  email = "info@deeperlifehighschool.org",
  phone = "08033319011,08035540255",
  schoolNameColor = "#E91E63",
}) => {
  // API call - replace with actual RTK query
  const {
    data: resultData,
    isLoading,
    error,
  } = useGetResultsQuery({
    studentId,
    sessionId,
    termId,
    classId,
  });

  if (isLoading) {
    return (
      <div className='flex items-center justify-center min-h-screen'>
        <div className='animate-spin rounded-full h-32 w-32 border-b-2 border-primary'></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className='flex items-center justify-center min-h-screen'>
        <div className='text-red-500 text-center'>
          <h2 className='text-2xl font-bold mb-2'>Error Loading Report Card</h2>
          <p>Please try again later.</p>
        </div>
      </div>
    );
  }

  if (!resultData) {
    return (
      <div className='flex items-center justify-center min-h-screen'>
        <div className='text-gray-500 text-center'>
          <h2 className='text-2xl font-bold mb-2'>No Data Found</h2>
          <p>Report card data is not available.</p>
        </div>
      </div>
    );
  }

  const {
    student,
    academic,
    subjects,
    behavioralAssessment,
    gradeScale,
    comments,
  } = resultData;

  return (
    <div className='bg-white min-h-screen'>
      {/* Print Styles */}
      <style jsx>{`
        @media print {
          .no-print {
            display: none !important;
          }
          .print-break {
            page-break-after: always;
          }
        }
      `}</style>

      <div className='max-w-4xl mx-auto p-6 bg-white'>
        {/* School Header */}
        <div className='bg-white mb-6'>
          <div className='flex items-center justify-between'>
            {/* Left Logo */}
            <div className='flex-shrink-0'>
              <Image
                src={leftLogoSrc}
                alt='School Logo'
                width={80}
                height={80}
                className='w-20 h-20 object-contain'
              />
            </div>

            {/* Center Content */}
            <div className='text-center flex-1 mx-6'>
              <h1
                className='text-2xl md:text-3xl font-bold mb-2'
                style={{ color: schoolNameColor }}
              >
                {schoolName}
              </h1>
              <div className='text-gray-600 text-sm space-y-1'>
                <p>{address}</p>
                <p>E-Mail: {email}</p>
                <p>Tel: {phone}</p>
              </div>
            </div>

            {/* Right - Student Photo */}
            <div className='flex-shrink-0'>
              <div className='w-20 h-24 bg-gray-200 rounded overflow-hidden'>
                <Image
                  src={student.studentPhoto || "/default-student.jpg"}
                  alt='Student Photo'
                  width={80}
                  height={96}
                  className='w-full h-full object-cover'
                />
              </div>
            </div>
          </div>
        </div>

        {/* Report Card Title */}
        <div className='text-center mb-6'>
          <h2 className='text-2xl font-bold text-gray-700'>Report Card</h2>
        </div>

        {/* Student Information Card */}
        <Card className='mb-6 border border-gray-300'>
          <CardContent className='p-4'>
            <div className='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 text-sm'>
              <div>
                <span className='font-semibold'>NAME:</span> {student.name}
              </div>
              <div>
                <span className='font-semibold'>SESSION:</span>{" "}
                {academic.session}
              </div>
              <div>
                <span className='font-semibold'>TERM:</span> {academic.term}
              </div>
              <div>
                <span className='font-semibold'>CLASS:</span> {student.class}
              </div>
              <div>
                <span className='font-semibold'>GENDER:</span> {student.gender}
              </div>
              <div>
                <span className='font-semibold'>AGE:</span> {student.age}
              </div>
              <div>
                <span className='font-semibold'>STUDENT IN CLASS:</span>{" "}
                {student.studentInClass}
              </div>
              <div>
                <span className='font-semibold'>OBTAINABLE SCORE:</span>{" "}
                {academic.obtainableScore}
              </div>
              <div>
                <span className='font-semibold'>DAYS PRESENT:</span>{" "}
                {academic.daysPresent}
              </div>
              <div>
                <span className='font-semibold'>OBTAINED SCORE:</span>{" "}
                {academic.obtainedScore}
              </div>
              <div>
                <span className='font-semibold'>GRADE:</span> {academic.grade}
              </div>
              <div>
                <span className='font-semibold'>DAYS ABSENT:</span>{" "}
                {academic.daysAbsent}
              </div>
              <div>
                <span className='font-semibold'>HIGHEST AVERAGE:</span>{" "}
                {academic.highestAverage}
              </div>
              <div>
                <span className='font-semibold'>LOWEST AVERAGE:</span>{" "}
                {academic.lowestAverage}
              </div>
              <div>
                <span className='font-semibold'>CLASS AVERAGE:</span>{" "}
                {academic.classAverage}
              </div>
              <div className='md:col-span-2 lg:col-span-1'>
                <span className='font-semibold'>STUDENT&apos;S AVERAGE:</span>{" "}
                {academic.studentAverage}
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Subjects Table */}
        <div className='mb-6'>
          <Table className='border border-gray-300'>
            <TableHeader>
              <TableRow className='bg-blue-100'>
                <TableHead className='border border-gray-300 font-bold text-black'>
                  SUBJECT/SCHEME
                </TableHead>
                <TableHead className='border border-gray-300 font-bold text-black text-center'>
                  ASS
                  <br />
                  <span className='text-xs'>( 5mrks )</span>
                </TableHead>
                <TableHead className='border border-gray-300 font-bold text-black text-center'>
                  C.W
                  <br />
                  <span className='text-xs'>( 5mrks )</span>
                </TableHead>
                <TableHead className='border border-gray-300 font-bold text-black text-center'>
                  C.A.T
                  <br />
                  <span className='text-xs'>( 5mrks )</span>
                </TableHead>
                <TableHead className='border border-gray-300 font-bold text-black text-center'>
                  TOTAL
                  <br />
                  <span className='text-xs'>( 20 mrks )</span>
                </TableHead>
                <TableHead className='border border-gray-300 font-bold text-black text-center'>
                  C.A
                  <br />
                  <span className='text-xs'>( 100 % )</span>
                </TableHead>
                <TableHead className='border border-gray-300 font-bold text-black text-center'>
                  GRADE
                </TableHead>
                <TableHead className='border border-gray-300 font-bold text-black text-center'>
                  Comment
                </TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {subjects.map((subject, index) => (
                <TableRow
                  key={subject.id}
                  className={index % 2 === 0 ? "bg-white" : "bg-gray-50"}
                >
                  <TableCell className='border border-gray-300 font-medium'>
                    {subject.name}
                  </TableCell>
                  <TableCell className='border border-gray-300 text-center'>
                    {subject.assessment}
                  </TableCell>
                  <TableCell className='border border-gray-300 text-center'>
                    {subject.classWork}
                  </TableCell>
                  <TableCell className='border border-gray-300 text-center'>
                    {subject.continuousAssessment}
                  </TableCell>
                  <TableCell className='border border-gray-300 text-center'>
                    {subject.total}
                  </TableCell>
                  <TableCell className='border border-gray-300 text-center'>
                    {subject.percentage}
                  </TableCell>
                  <TableCell className='border border-gray-300 text-center font-semibold'>
                    {subject.grade}
                  </TableCell>
                  <TableCell className='border border-gray-300 text-center'>
                    {subject.comment}
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </div>

        {/* Bottom Section */}
        <div className='grid grid-cols-1 lg:grid-cols-2 gap-6'>
          {/* Key to Grade */}
          <div>
            <h3 className='bg-blue-100 p-2 font-bold text-center border border-gray-300'>
              KEY TO GRADE
            </h3>
            <div className='border border-gray-300 border-t-0'>
              {gradeScale.map((item, index) => (
                <div
                  key={index}
                  className='flex justify-between p-2 border-b border-gray-200 last:border-b-0'
                >
                  <span className='font-medium'>{item.grade}</span>
                  <span>{item.range}</span>
                </div>
              ))}
            </div>
          </div>

          {/* Behavioral Assessment */}
          <div>
            <Table className='border border-gray-300'>
              <TableHeader>
                <TableRow className='bg-blue-100'>
                  <TableHead className='border border-gray-300 font-bold text-black'></TableHead>
                  <TableHead className='border border-gray-300 font-bold text-black text-center'>
                    Excellent
                  </TableHead>
                  <TableHead className='border border-gray-300 font-bold text-black text-center'>
                    Very Good
                  </TableHead>
                  <TableHead className='border border-gray-300 font-bold text-black text-center'>
                    Good
                  </TableHead>
                  <TableHead className='border border-gray-300 font-bold text-black text-center'>
                    Fair
                  </TableHead>
                  <TableHead className='border border-gray-300 font-bold text-black text-center'>
                    Poor
                  </TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {Object.entries(behavioralAssessment).map(
                  ([key, value], index) => (
                    <TableRow
                      key={key}
                      className={index % 2 === 0 ? "bg-white" : "bg-gray-50"}
                    >
                      <TableCell className='border border-gray-300 font-medium capitalize'>
                        {key.replace(/([A-Z])/g, " $1").trim()}
                      </TableCell>
                      <TableCell className='border border-gray-300 text-center'>
                        {value === "Excellent" ? "✓" : ""}
                      </TableCell>
                      <TableCell className='border border-gray-300 text-center'>
                        {value === "Very Good" ? "✓" : ""}
                      </TableCell>
                      <TableCell className='border border-gray-300 text-center'>
                        {value === "Good" ? "✓" : ""}
                      </TableCell>
                      <TableCell className='border border-gray-300 text-center'>
                        {value === "Fair" ? "✓" : ""}
                      </TableCell>
                      <TableCell className='border border-gray-300 text-center'>
                        {value === "Poor" ? "✓" : ""}
                      </TableCell>
                    </TableRow>
                  )
                )}
              </TableBody>
            </Table>
          </div>
        </div>

        {/* Comments and Signatures */}
        <div className='mt-8 space-y-4'>
          <div className='border-b border-gray-300 pb-2'>
            <span className='font-bold'>PRINCIPAL&apos;S COMMENT:</span>
            <div className='mt-2 min-h-[40px] border-b border-dotted border-gray-400'>
              {comments.principal}
            </div>
          </div>

          <div className='border-b border-gray-300 pb-2'>
            <span className='font-bold'>ADMISTRATOR&apos;S SIGNATURE:</span>
            <div className='mt-2 min-h-[40px] border-b border-dotted border-gray-400'>
              {comments.administrator}
            </div>
          </div>

          <div className='border-b border-gray-300 pb-2'>
            <span className='font-bold'>NEXT TERM BEEGINS ON:</span>
            <div className='mt-2 min-h-[40px] border-b border-dotted border-gray-400'>
              {resultData.nextTermBegins}
            </div>
          </div>
        </div>

        {/* Print Button */}
        <div className='mt-8 text-center no-print'>
          <button
            onClick={() => window.print()}
            className='bg-primary text-white px-6 py-2 rounded hover:bg-primary/90 transition-colors'
          >
            Print Report Card
          </button>
        </div>
      </div>
    </div>
  );
};

export default ReportCard;
